package graph;

import java.util.Scanner;

public class HasPath {
	
	
	
	public static boolean hasPath(int [][] adjMatrix, int currVertex, boolean [] visited,int a, int b) {
		
		boolean result=false;
		visited[currVertex]=true;
		
		if(adjMatrix[currVertex][b-1]==1) {
			return true;
		}
		
		for(int i=0;i<adjMatrix.length;i++) {
			if(adjMatrix[currVertex][i]==1 && visited[i]==false) {
				 boolean  res=hasPath(adjMatrix, i, visited, a, b);
				
				 if(res && !result) {
					 result=res;
				 }
			}
		}
		return result;
		
		
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Scanner s=new Scanner(System.in);

		int n=s.nextInt();
		int v=s.nextInt();

		int [][] adjMatrix=new int[n][n];
		for(int i=0;i<v;i++) {
			int v1=s.nextInt();
			int v2=s.nextInt();
			adjMatrix[v1][v2]=1;
			adjMatrix[v2][v1]=1;
		}
		
		boolean visited[]=new boolean[n];
		int a=s.nextInt();
		int b=s.nextInt();
		
		boolean check=hasPath(adjMatrix, 0, visited, a, b);
		

	}

}
